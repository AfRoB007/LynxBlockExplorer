#!/usr/bin/env node

var debug = require('debug')('explorer');
var settings = require('../lib/settings');
var helpers = require('../helpers');
var bitcoin = require('../helpers/bitcoin');
var app = require('../app');
var db = require('../lib/database');
var co = require('co');

app.set('port', process.env.PORT || settings.port);

helpers.connect(function () {
  co(function* () {
    let coinStats = yield helpers.db.coinStats.getCoinStats();
    if (coinStats === null) {
      let count = yield bitcoin.getBlockCount();   
      let supply = yield bitcoin.getSupply();
      let connections = yield bitcoin.getConnections();
      yield helpers.db.coinStats.save({
        coin : settings.coin,
        count,
        supply,
        connections
      });      
      console.log('new stats created');
    }
  }).catch(function (err) {
    console.log('error while creating coin stats');
    console.log(err);
  });

  // db.check_stats(settings.coin, function(exists) {
  //   if (exists == false) {
  //     console.log('no stats entry found, creating now..');
  //     db.create_stats(settings.coin, function(){
  //       //console.log('stats entry created successfully.');
  //     });
  //   } else {
  //     db.get_stats(settings.coin, function (stats) {
  //       app.locals.stats = stats;
  //     });
  //   }
  // });
  // check markets
  var markets = settings.markets.enabled;
  for (var i = 0; i < markets.length; i++) {
    db.check_market(markets[i], function (market, exists) {
      if (exists == false) {
        console.log('no %s entry found, creating now..', market);
        db.create_market(settings.markets.coin, settings.markets.exchange, market, function () {});
      }
    });
  }

  db.check_richlist(settings.coin, function (exists) {
    if (exists == false) {
      console.log('no richlist entry found, creating now..');
      db.create_richlist(settings.coin, function () {

      });
    }
  });
  if (settings.heavy == true) {
    db.check_heavy(settings.coin, function (exists) {
      if (exists == false) {
        console.log('no heavy entry found, creating now..');
        db.create_heavy(settings.coin, function () {

        });
      }
    });
  }
});

let server = app.listen(app.get('port'), function () {
  debug('Express server listening on port ' + server.address().port);
  console.log('Express server listening on port ' + server.address().port);
});

process.on('exit', function (code) {
  console.log('About to exit with code:', code);
});

process.on('uncaughtException', function (err) {
  console.log('Caught exception: ' + err);
});